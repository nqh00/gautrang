/* -------------------- JELLYFIN DARK THEME -------------------- */
* {
    scrollbar-width: thin;
    scrollbar-color: #3b3b3b #202020;
}

.skinHeader,
html {
    color: #ddd;
    color: rgba(255, 255, 255, 0.8);
}

.wizardStartForm,
.ui-corner-all,
.ui-shadow {
    background-color: #101010;
}

.emby-collapsible-button {
    border-color: #383838;
    border-color: rgba(255, 255, 255, 0.135);
}

.skinHeader-withBackground {
    background-color: #202020;
}

.layout-tv .skinHeader.semiTransparent {
    background: none;
}

.backgroundContainer,
.dialog,
.nowPlayingPlaylist,
.nowPlayingContextMenu,
html {
    background-color: #101010;
}

.backgroundContainer.withBackdrop {
    background-color: rgba(0, 0, 0, 0.86);
}

@media (hover: hover) and (pointer: fine) {
    .paper-icon-button-light:hover:not(:disabled) {
        color: #00a4dc;
        background-color: rgba(0, 164, 220, 0.2);
    }
}

.paper-icon-button-light:active:not(:disabled) {
    color: #00a4dc;
    background-color: rgba(0, 164, 220, 0.2);
}

.paper-icon-button-light.show-focus:focus {
    color: #00a4dc;
}

.fab,
.raised {
    background: #303030;
    color: rgba(255, 255, 255, 0.87);
}

.fab:focus,
.raised:focus {
    background: #383838;
}

.button-submit {
    background: #00a4dc;
    color: #fff;
}

.button-submit:focus {
    background: #0cb0e8;
    color: #fff;
}

.button-delete {
    background: rgb(247, 0, 0);
    color: rgba(255, 255, 255, 0.87);
}

.checkboxLabel {
    color: inherit;
}

.checkboxListLabel,
.inputLabel,
.inputLabelUnfocused,
.paperListLabel,
.textareaLabelUnfocused {
    color: #bbb;
    color: rgba(255, 255, 255, 0.7);
}

.inputLabelFocused,
.selectLabelFocused,
.textareaLabelFocused {
    color: #00a4dc;
}

.checkboxOutline {
    border-color: currentColor;
}

.collapseContent,
.formDialogFooter:not(.formDialogFooter-clear),
.formDialogHeader:not(.formDialogHeader-clear),
.paperList,
.visualCardBox {
    background-color: #202020;
}

.layout-tv .formDialogFooter:not(.formDialogFooter-clear) {
    background-color: transparent;
}

.defaultCardBackground1 {
    background-color: #00455c;
}

.defaultCardBackground2 {
    background-color: #44bae1;
}

.defaultCardBackground3 {
    background-color: #00a4db;
}

.defaultCardBackground4 {
    background-color: #1c4c5c;
}

.defaultCardBackground5 {
    background-color: #007ea8;
}

.cardText-secondary,
.fieldDescription,
.guide-programNameCaret,
.listItem .secondary,
.nowPlayingBarSecondaryText,
.programSecondaryTitle,
.secondaryText {
    color: #999;
    color: rgba(255, 255, 255, 0.5);
}

.actionsheetDivider {
    background: #444;
    background: rgba(255, 255, 255, 0.14);
}

.cardFooter-vibrant .cardText-secondary {
    color: inherit;
    opacity: 0.5;
}

.toast {
    background: #303030;
    color: #fff;
    color: rgba(255, 255, 255, 0.87);
}

.appfooter,
.playlistSectionButton {
    background: #202020;
    color: #ccc;
    color: rgba(255, 255, 255, 0.78);
}

.itemSelectionPanel {
    border: 1px solid #00a4dc;
}

.selectionCommandsPanel {
    background: #00a4dc;
    color: #fff;
}

.upNextDialog-countdownText {
    color: #00a4dc;
}

.alphaPickerButton {
    color: #999;
    color: rgba(255, 255, 255, 0.5);
    background-color: transparent;
}

.alphaPickerButton-selected {
    color: #fff;
}

.alphaPickerButton-tv:focus {
    background-color: #00a4dc;
    color: #fff !important;
}

.detailTableBodyRow-shaded:nth-child(even) {
    background: #1c1c1c;
    background: rgba(30, 30, 30, 0.9);
}

.detailRibbon {
    background: rgba(32, 32, 32, 0.8);
}

.layout-tv .detailRibbon {
    background: none;
}

.listItem-border {
    border-color: rgba(34, 34, 34, 0.9) !important;
}

.listItem:focus {
    background: #333;
}

.listItem:hover {
    background: #242424;
}

.progressring-spiner {
    border-color: #00a4dc;
}

.button-flat:hover {
    color: #00a4dc;
}

.button-link {
    color: #00a4dc;
}

.mediaInfoText {
    color: #ddd;
    background: rgba(170, 170, 190, 0.2);
}

.emby-input,
.emby-textarea {
    color: inherit;
    background: #292929;
    border: 0.16em solid #292929;
    border-radius: 0.2em;
}

.emby-input:focus,
.emby-textarea:focus {
    border-color: #00a4dc;
}

.emby-select-withcolor {
    color: inherit;
    background: #292929;
    border: 0.07em solid #292929;
}

.emby-select-withcolor > option {
    color: inherit;
    background: #222;
}

.emby-select-withcolor:focus {
    border-color: #00a4dc !important;
}

.emby-select-tv-withcolor:focus {
    background-color: #00a4dc !important;
    color: #fff !important;
}

.emby-checkbox:checked + span + .checkboxOutline {
    border-color: #00a4dc;
}

.emby-checkbox:focus + span + .checkboxOutline {
    border-color: #fff;
}

.emby-checkbox:checked + span + .checkboxOutline,
.itemProgressBarForeground {
    background-color: #00a4dc;
}

.emby-checkbox:focus:not(:checked) + span + .checkboxOutline {
    border-color: #00a4dc;
}

.itemProgressBarForeground-recording {
    background-color: #cb272a;
}

.countIndicator,
.fullSyncIndicator,
.mediaSourceIndicator,
.playedIndicator {
    background: #00a4dc;
}

.fullSyncIndicator {
    color: #fff;
}

.mainDrawer,
.drawer-open {
    background-color: #101010;
}

.navMenuOption:hover {
    background: #252528;
}

.navMenuOption-selected {
    background: #00a4dc !important;
    color: #fff;
}

.emby-button.show-focus:focus {
    background: #00a4dc;
    color: #fff;
}

.emby-tab-button {
    color: #999;
}

.emby-tab-button-active {
    color: #fff;
}

.emby-tab-button.show-focus:focus {
    color: #00a4dc;
}

.emby-tab-button:hover {
    color: #00a4dc;
}

.channelPrograms,
.guide-channelHeaderCell,
.programCell {
    border-color: rgba(255, 255, 255, 0.05);
}

.programCell-sports {
    background: #3949ab !important;
}

.programCell-movie {
    background: #5e35b1 !important;
}

.programCell-kids {
    background: #039be5 !important;
}

.programCell-news {
    background: #43a047 !important;
}

.programCell-active {
    background: #1e1e1e !important;
}

.guide-channelHeaderCell:focus,
.programCell:focus {
    background-color: #00a4dc !important;
    color: #fff !important;
}

.guide-programTextIcon {
    color: #1e1e1e;
    background: #555;
}

.guide-headerTimeslots {
    color: inherit;
}

.guide-date-tab-button {
    color: #555;
    color: rgba(255, 255, 255, 0.3);
}

.guide-date-tab-button.emby-tab-button-active,
.guide-date-tab-button:focus {
    color: #00a4dc;
}

.guide-date-tab-button.show-focus:focus {
    background-color: #00a4dc;
    color: #fff;
}

.infoBanner {
    color: #ddd;
    background: #111;
    padding: 1em;
    border-radius: 0.25em;
}

.ratingbutton-icon-withrating {
    color: #c33;
}

.downloadbutton-icon-complete,
.downloadbutton-icon-on {
    color: #4285f4;
}

.playstatebutton-icon-played {
    color: #c33;
}

.buttonActive {
    color: #00a4dc !important;
}

.card:focus .cardBox.visualCardBox,
.card:focus .cardBox:not(.visualCardBox) .cardScalable {
    border-color: #00a4dc !important;
}

::-webkit-scrollbar-track {
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

::-webkit-scrollbar-track-piece {
    background-color: #3b3b3b;
}

.layout-desktop ::-webkit-scrollbar,
.layout-tv ::-webkit-scrollbar {
    width: 0.4em;
    height: 0.4em;
}

::-webkit-scrollbar-thumb:horizontal,
::-webkit-scrollbar-thumb:vertical {
    border-radius: 2px;
    background: center no-repeat #888;
}

.timeslotHeaders-desktop::-webkit-scrollbar {
    height: 0.7em;
}

.metadataSidebarIcon {
    color: #00a4dc;
}

.emby-button.detailFloatingButton {
    background-color: #00a4dc;
    color: #fff;
}

.layout-tv .emby-button.detailFloatingButton:focus {
    background-color: #f2f2f2;
    color: #00a4dc;
}

#comicsPlayer,
#bookPlayer,
#pdfPlayer {
    background: #101010;
}

#comicsPlayer .swiper-pagination {
    background: #101010;
    color: #fff;
}

#bookPlayer .topButtons {
    color: #fff;
}

#comicsPlayer .actionButtonIcon,
#pdfPlayer .actionButtonIcon {
    color: #fff;
}

#dialogToc {
    background-color: #101010;
}

#dialogToc .bookplayerButtonIcon {
    color: #ccc;
}

#dialogToc .bookplayerButtonIcon:hover {
    color: #00a4dc;
}

#dialogToc .toc li a:link {
    color: #ccc;
}

#dialogToc .toc li a:active,
#dialogToc .toc li a:hover {
    color: #00a4dc;
}

/* -------------------- ELEGANTFIN THEME -------------------- */

/* Inter Font Family */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

:root {
    --elegantFinFooterText: "";
    color-scheme: dark;
    --darkerGradientPoint: #111827;
    --darkerGradientPointAlpha: rgba(17, 24, 39, 0.85);
    --lighterGradientPoint: #1d2635;
    --lighterGradientPointAlpha: rgba(29, 38, 53, 0.85);
    --borderColor: rgb(71, 80, 92);
    --lighterBorderColor: rgb(255 255 255 / 20%);
    --headerColor: rgba(30, 40, 54, 0.8);
    --drawerColor: rgba(30, 40, 54, 0.9);
    --selectorBackgroundColor: rgb(55, 65, 81);
    --selectorBackgroundColorAlpha: rgba(55, 65, 81, 0.5);
    --btnDeleteColor: rgb(169, 29, 29);
    --btnDeleteBorderColor: rgb(217, 84, 84);
    --btnSubmitColor: rgb(61, 54, 178);
    --btnSubmitBorderColor: rgb(117 111 226);
    --checkboxCheckedBgColor: rgb(79, 70, 229);
    --highlightOutlineColor: rgb(37, 99, 235);
    --textColor: rgb(209, 213, 219);
    --dimTextColor: rgb(156, 163, 175);
    --activeColorAlpha: rgba(119, 91, 244, 0.9);
    --activeColor: rgb(119, 91, 244);
    --tableBodyColor: rgb(31 41 55 / 1);
    --uiAccentColor: rgb(117 111 226);
    --btnMiniPlayColor: rgba(0, 0, 0, .3);
    --btnPlayBorderColor: color-mix(in srgb, var(--btnMiniPlayColor), rgb(255, 255, 255) 5%);
    --backgroundGradient: linear-gradient(0deg, var(--darkerGradientPoint) 35%, var(--lighterGradientPoint));
    --cardBackgroundGradient: linear-gradient(0deg, var(--darkerGradientPoint), var(--lighterGradientPoint) 25%);
    --hoverGradientA: linear-gradient(130deg, rgb(255 255 255 / 35%) 20%, rgb(255 255 255 / 15%) 40%);
    --hoverGradientB: radial-gradient(100% 250% at 90% 190%, rgba(255, 255, 255, 0.15) 85%, rgba(255, 255, 255, 0.33) 100%);
    --shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12), 0 3px 1px -2px rgba(0, 0, 0, .2);
    --largerRadius: 1.25em;
    --largeRadius: 1em;
    --smallRadius: .5em;
    --smallerRadius: .375em;
    --borderWidth: 0.075em;
    --defaultBorder: var(--borderWidth) solid var(--borderColor);
    --defaultLighterBorder: var(--borderWidth) solid var(--lighterBorderColor);

    /* login page customizations */
    --loginPageBgUrl: url("");
    --blurSmallest: blur(2px);
    --blurDefault: blur(5px);
    --blurLarge: blur(10px);
    --blurLargest: blur(20px);

    /* to revert to old icons, use 'Material Icons'*/
    --iconPack: 'Material Icons';
}

html {
    font-family: "Inter", serif;
    font-optical-sizing: auto;
    font-weight: 425;
    font-style: normal;
    -webkit-tap-highlight-color: transparent !important;
}

/* Material Icons Round */
@font-face {
    font-family: 'Material Icons Round';
    font-style: normal;
    font-weight: 100 700;
    src: url(https://fonts.gstatic.com/s/materialsymbolsrounded/v230/sykg-zNym6YjUruM-QrEh7-nyTnjDwKNJ_190Fjzag.woff2) format('woff2');
}

.material-icons {
    font-family: var(--iconPack) !important;
    font-weight: normal;
    font-style: normal;
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: 'liga';
    font-variation-settings:
        'FILL' 1,
        'wght' 400,
        'GRAD' 0,
        'opsz' 24
}

.material-icons.info_outline:before {
    font-family: Material Icons;
}

.dashboardFooter {
    font-family: "Noto Sans", serif;
    transition: transform 50ms;
}

.dashboardFooter::after {
    content: var(--elegantFinFooterText);
    font-size: .8em;
    color: #4e4e60;
}

::selection {
    background: var(--activeColorAlpha);
}

.cardImageIcon {
    color: var(--borderColor);
}

.card {
    padding: .375em;
}

.card:focus .cardBox:not(.visualCardBox) .cardScalable {
    border-color: var(--highlightOutlineColor) !important;
    filter: brightness(1.125);
}

.emby-button.show-focus:focus,
.paper-icon-button-light.show-focus:focus {
    background-color: var(--highlightOutlineColor) !important;
    color: #fff;
}

.emby-tabs .emby-button.show-focus:focus {
    outline: none !important;
    color: #fff;
    background-color: var(--highlightOutlineColor) !important;
}

[dir=ltr] .itemsContainer>.card>.cardBox {
    margin-left: auto;
    margin-right: auto;
}

.vertical-wrap:not(.centered) {
    justify-content: flex-start !important;
}

.countIndicator,
.fullSyncIndicator,
.mediaSourceIndicator,
.playedIndicator {
    background: rgba(0, 0, 0, .5);
    border: var(--defaultLighterBorder);
}

.cardScalable {
    border-radius: var(--largeRadius);
    border: var(--borderColor) solid calc(2 * var(--borderWidth)) !important;
    overflow: hidden !important;
    transition: transform 125ms;
}

.layout-mobile .cardScalable {
    border: var(--defaultBorder) !important;
}

.cardImageContainer {
    transition: transform .375s;
}

.card.squareCard[data-type="TvChannel"] .cardImageContainer.cardContent {
    background-color: rgba(255, 255, 255, 0.2);
}

.cardImageContainer>.cardDefaultText {
    font-size: 2em;
    padding-top: 1.5em;
    color: transparent;
    white-space: pre;
}

.cardImageContainer>.cardDefaultText::before {
    content: "?\A";
    color: var(--borderColor);
}

.card.card-hoverable:hover .cardScalable {
    border-color: var(--textColor) !important;
}

.card.card-hoverable:hover .cardImageContainer {
    transform: scale(1.025);
    filter: brightness(1.125);
}

.card.card-hoverable .itemSelectionPanel {
    transition: transform .125s;
}

.card.card-hoverable:hover .cardScalable,
.card.card-hoverable:hover .itemSelectionPanel {
    transform: scale(1.02);
}

.card.card-hoverable .cardScalable:active {
    transition: transform .075s;
    transform: scale(1);
}

.cardScalable:has(.cardOverlayContainer .cardOverlayButton:hover)>.cardImageContainer {
    transform: scale(1);
}

.cardOverlayContainer {
    transition: .25s;
    background: rgba(255, 255, 255, 0.1);
    background-size: 200%;
    background-position-x: 100%;
}

.layout-desktop .card.card-hoverable:hover .cardOverlayContainer {
    background-position-x: 0%;
}

.cardBox:not(.visualCardBox) .cardPadder {
    background-color: var(--lighterGradientPoint);
}

.cardOverlayContainer>.cardOverlayFab-primary {
    left: unset;
    margin-left: unset;
    margin-top: unset;
    top: unset;
    right: 1.25em;
    bottom: 1.25em;
}

.cardOverlayContainer>.cardOverlayFab-primary,
.listItemImageButton,
.layout-mobile .cardOverlayButton-br>.cardOverlayButtonIcon {
    background-color: var(--btnMiniPlayColor) !important;
    color: white;
    border: var(--defaultLighterBorder);
    border-color: var(--btnPlayBorderColor);
    font-size: 75%;
}

.cardOverlayContainer>.cardOverlayFab-primary:hover,
.listItemImageButton:hover {
    color: white;
}

.layout-desktop .cardOverlayButton-br {
    display: none;
}

.layout-mobile .cardOverlayButton {
    padding: .75em;
}

.layout-mobile .portraitCard .cardOverlayButton-br,
.layout-mobile .backdropCard .cardOverlayButton-br,
.layout-mobile .cardOverlayButton-br[data-action="menu"] {
    display: none;
}

.cardOverlayContainer:has(.cardOverlayButton:hover) {
    backdrop-filter: var(--blurDefault);
}

.listViewUserDataButtons {
    flex-direction: column;
    font-size: x-small;
}

.listItem-largeImage[data-type="Episode"] .listViewUserDataButtons {
    font-size: small;
}

.smallBackdropCard,
.squareCard,
.backdropCard,
.bannerCard {
    width: 46%;
}

.portraitCard {
    min-width: 5em;
}

/* if the window width is equal to or more than (at minimum) 150em then the code in the query will trigger */
/* 14 posters, 10 thumbs */
@media (min-width: 150em) {

    .portraitCard,
    .squareCard {
        width: 6.6% !important;
    }

    .backdropCard {
        width: 9.5%;
    }
}

/* if the window width is equal to or less than (at maximum) 150em then the code in the query will trigger */
/* 9 posters, 7 thumbs */
@media (max-width: 150em) {

    .portraitCard,
    .squareCard {
        width: 10.4% !important;
    }

    .backdropCard {
        width: 13.6%;
    }
}

/* 7 posters, 6 thumbs */
@media (max-width: 120em) {

    .portraitCard,
    .squareCard {
        width: 13.5% !important;
    }

    .backdropCard {
        width: 15.8%;
    }
}

/* 6 posters, 5 thumbs */
@media (max-width: 100em) {

    .portraitCard,
    .squareCard {
        width: 15.2% !important;
    }

    .backdropCard {
        width: 18.4%;
    }
}

/* 5 posters, 4 thumbs */
@media (max-width: 62em) {

    .portraitCard,
    .squareCard {
        width: 17.9% !important;
    }

    .backdropCard {
        width: 23.3%;
    }

}

/* 4 posters, 3 thumbs */
@media (max-width: 48.125em) {

    .portraitCard,
    .squareCard {
        width: 22.3% !important;
    }

    .backdropCard {
        width: 30.7%;
    }
}

/* 3 posters, 2 thumbs */
@media (max-width: 30em) {

    .portraitCard,
    .squareCard {
        width: 28.8% !important;
    }

    .layout-mobile .portraitCard,
    .layout-mobile .squareCard {
        width: 29.8% !important;
        filter: none !important;
        -webkit-filter: none !important;
    }

    .backdropCard {
        width: 46%;
    }
}

.detailLogo {
    display: none;
}

.detailPageWrapperContainer {
    padding-top: unset;
    margin-top: unset;
}

.layout-mobile .detailPageWrapperContainer {
    background: var(--darkerGradientPointAlpha);
}

.layout-desktop .detailPageWrapperContainer {
    background: linear-gradient(0deg, var(--darkerGradientPoint) 80%, transparent);
    min-height: calc(100vh - 13em);
}

.detailPagePrimaryContainer {
    align-content: space-between;
    align-items: stretch;
    justify-content: end;
    flex-direction: column;
}

[dir=ltr] .detailPagePrimaryContent {
    padding-right: 0;
}

.layout-mobile .detailPagePrimaryContainer {
    background: linear-gradient(0deg, var(--darkerGradientPoint) 70%, transparent);
}

.layout-desktop .detailPagePrimaryContainer {
    background: transparent;
}

.layout-mobile .detailPageSecondaryContainer {
    background-color: var(--darkerGradientPoint);
}

.layout-desktop .detailPageSecondaryContainer {
    background-color: transparent;
}

.headerHomeButton {
    display: none;
}

/* hide sync button on home screen on phones only in portrait mode */
@media (orientation: portrait) {
    .layout-mobile .skinHeader.noHomeButtonHeader .headerSyncButton {
        display: none;
    }
}

.pageTitle {
    height: 1.5em;
}

.headerLeft .pageTitle {
    display: -webkit-box;
    line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.paper-icon-button-light>.material-icons {
    font-size: 1.25em;
}

.verticalSection.emby-scroller-container>h2.sectionTitle.sectionTitle-cards {
    padding-top: 1.25em !important;
}

.layout-mobile :not(.sectionTitleContainer-cards)>.sectionTitle-cards {
    text-align: left;
}

.emby-scrollbuttons-button.paper-icon-button-light>.material-icons {
    font-size: 1.5em;
    place-content: center;
}

.detailRibbon {
    background-color: transparent;
}

.itemBackdrop {
    height: 13em;
}

.mediaInfoItem {
    font-family: system-ui;
    border-radius: var(--smallRadius);
    font-size: .85em;
    font-weight: 500;
    padding-block: 0;
}

.mediaInfoOfficialRating {
    background: transparent !important;
    font-size: .6em;
    font-family: 'Noto Sans', sans-serif;
    line-height: 1.5em;
    transform: translateY(-.15em);
    font-weight: 600;
    border: var(--defaultBorder);
}

.starIcon {
    background: linear-gradient(to right, #90cea1, #01b4e4);
    background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-left: -.125em;
    transform: translateY(-.02em);
}

[dir=ltr] .mediaInfoCriticRating {
    background-size: 30%;
    padding-left: 1.5em;
}

[dir=ltr] .mediaInfoCriticRating::after {
    content: "%";
}

.layout-desktop .detailRibbon {
    height: auto !important;
    margin-top: unset !important;
}

.layout-desktop .detailImageContainer .card {
    top: unset !important;
    width: 23vw !important;
}

.layout-tv .detailImageContainer .card {
    width: 23vw !important;
}

@media (max-width: 62.5em) {
    .layout-desktop .itemBackdrop {
        height: 7em !important;
    }

    .layout-desktop .detailPageWrapperContainer {
        min-height: calc(100vh - 7em);
    }
}

@media (max-width: 50em) {
    .homeLibraryButton {
        width: 45.6% !important;
    }
}

.homeLibraryButton {
    padding-inline-start: .25em;
    min-width: 15%;
}

@media (orientation: landscape) and (min-width: 40em) {
    .layout-mobile .itemBackdrop {
        height: 40vh;
        opacity: .10;
    }

    .layout-mobile .detailPageWrapperContainer {
        padding-top: 35vh;
        margin-top: -47vh;
    }
}

@media (orientation: portrait) and (max-width: 40em) {
    .layout-mobile .itemBackdrop {
        height: 40vh;
    }

    .layout-mobile .detailPageWrapperContainer {
        padding-top: 35vh;
        margin-top: -47vh;
    }

    [data-type=Movie] .listItemImage,
    [data-type=Series] .listItemImage {
        display: unset;
    }
}

@media (orientation: landscape) and (max-height: 40em) {

    .overflowPortraitCard,
    .overflowSquareCard {
        width: 13vw;
    }

    .overflowBackdropCard,
    .overflowSmallBackdropCard {
        width: 20vw;
    }

    .portraitCard {
        min-width: 2em;
        width: 8.5%;
        max-width: 6.5em;
    }

    .backdropCard {
        width: 23%;
    }

    .layout-mobile .detailImageContainer .card {
        max-width: 15vw;
    }

    .layout-mobile [dir=ltr] .infoWrapper {
        padding-left: 25% !important;
    }

}

.layout-mobile .itemBackdrop {
    margin-top: 3.5em;
}

.layout-tv .itemBackdrop {
    display: block;
    height: 13vh;
}

h2 {
    font-size: 1.25em;
}

h1,
h2 {
    font-weight: 600;
}

.tagline {
    font-size: 1.3em;
    font-weight: 400;
    margin-bottom: 0;
    font-style: italic;
    color: var(--textColor);
}

.nowPlayingPlaylist,
.nowPlayingContextMenu,
html {
    background: var(--backgroundGradient)
}

.backgroundContainer:not(.withBackdrop) {
    background: var(--backgroundGradient)
}

.backgroundContainer.withBackdrop {
    opacity: .9375;
    background: var(--backgroundGradient)
}

.skinHeader-blurred:not(.osdHeader),
.appfooter {
    background-color: var(--headerColor) !important;
    backdrop-filter: var(--blurDefault) !important;
}

.headroom--unpinned {
    -webkit-transform: translateY(-3.5em);
    transform: translateY(-3.5em);
}

.skinHeader:not(.osdHeader) {
    border-style: solid;
    border-width: 0 0 var(--borderWidth) 0;
    border-color: var(--borderColor);
    transition: all .375s ease-in-out;
}

.lyricPage {
    padding-inline: .5em;
}

.lyricsLine {
    font-size: 2.5em;
    color: var(--textColor);
    text-align: center;
    align-self: center;
    font-weight: 600;
    transition: transform .125s;
}

.pastLyric,
.futureLyric {
    transform: scale(.75);
    font-weight: 400;
    text-align: center;
}

.pastLyric {
    opacity: .65;
}

.buttonActive {
    color: var(--uiAccentColor) !important;
}

#divRunningTasks progress {
    width: calc(100% - 7em);
}

.itemProgressBar:not(.backgroundProgress, .playbackProgress, .transcodingProgress) {
    backdrop-filter: var(--blurLarge);
    background-color: rgba(169, 169, 169, 0.3) !important;
    height: 0.35em;
    overflow: hidden;
    border-radius: var(--largeRadius);
}

.itemProgressBarForeground {
    border-radius: var(--largeRadius);
    background-color: var(--dimTextColor);
}

.layout-mobile .itemProgressBar:not(.backgroundProgress, .playbackProgress, .transcodingProgress) {
    width: calc(100% - 2.5em);
}

.layout-mobile .backdropCard .itemProgressBar:not(.backgroundProgress, .playbackProgress, .transcodingProgress) {
    width: 100%;
    width: -webkit-fill-available;
}

.backgroundProgress>div {
    background-color: var(--darkerGradientPoint);
}

.playbackProgress>div {
    background-color: var(--dimTextColor);
}

::-moz-progress-bar {
    background: var(--uiAccentColor) !important;
    border-radius: var(--smallRadius) inherit var(--smallRadius) 0;
}

::-webkit-progress-value {
    background: var(--uiAccentColor) !important;
    border-radius: var(--smallRadius) inherit var(--smallRadius) 0;
}

progress,
::-webkit-progress-bar {
    background: var(--darkerGradientPoint) !important;
    border: var(--defaultBorder) !important;
    border-radius: var(--smallRadius);
    overflow: hidden;
}

progress+span {
    color: var(--uiAccentColor) !important;
}

.mdl-spinner__circle {
    border-color: var(--dimTextColor);
    border-style: inset;
}

.mdl-slider-container {
    height: 1em;
}

.mdl-slider {
    height: unset;
}

.mdl-slider-background-flex-container {
    padding: 0;
}

.mdl-slider-background-flex {
    border-radius: var(--smallRadius);
}

.mdl-slider-background-lower {
    background-color: var(--uiAccentColor);
}

.mdl-slider::-webkit-slider-thumb {
    background: var(--uiAccentColor);
}

.mdl-slider::-webkit-slider-thumb {
    width: .75em !important;
    height: .75em !important;
}

.mdl-slider::-moz-range-thumb {
    background: var(--uiAccentColor);
}

.sliderContainer:active .mdl-slider-background-flex {
    transform: scaleY(1.75);
}

.sliderMarkerContainer {
    margin: 0 .1em;
}

.sliderMarker.watched {
    background-color: var(--uiAccentColor);
}

.sliderMarker {
    height: 4px;
    border-radius: 2px;
}

.iconOsdProgressInner {
    background: var(--uiAccentColor);
}

.selectLabel {
    max-height: 2em;
}

.layout-mobile .mainDetailButtons {
    margin-top: 2em;
}

.button-link {
    color: rgb(200, 200, 200);
}

.button-link:hover {
    color: unset !important;
    text-decoration: none;
}

.button-link:active {
    color: rgb(243, 243, 243) !important;
    text-decoration: none;
}

.detailButton {
    border-radius: var(--smallRadius);
    border: var(--defaultLighterBorder);
    padding: .5em .5em !important;
    margin: 0.125em !important;
    backdrop-filter: var(--blurSmallest);
}

.btnPlay.detailButton {
    background-color: rgba(255, 255, 255, 0.05);
    border: var(--defaultLighterBorder);
}

.btnPlay>.detailButton-content {
    -webkit-align-items: unset;
    align-items: unset;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: unset;
    flex-direction: unset;
    -webkit-justify-content: unset;
    align-content: unset;
    justify-content: flex-start;
}


.btnPlay[title="Play"]>.detailButton-content::after {
    content: "Play";
}

.btnPlay[title="Resume"]>.detailButton-content::after {
    content: "Resume";
}

.btnPlay>.detailButton-content::after {
    padding-left: .25em;
    padding-right: .5em;
    place-content: center;
}

.mainDrawer,
.drawer-open {
    background-color: var(--drawerColor);
    border-right: var(--defaultBorder);
    backdrop-filter: var(--blurLarge);
}

.mainDrawer-scrollContainer {
    padding-bottom: 5vh;
}

.btnHeaderSave.button-flat {
    color: var(--uiAccentColor) !important;
    gap: 0.3em;
    border-radius: var(--smallRadius);
}

.button-flat:hover {
    color: unset;
}

.button-flat:active {
    color: unset;
    background-color: rgba(255, 255, 255, 0.2);
}

.playstatebutton-icon-played {
    color: rgb(34, 197, 94);
}

.itemDetailsGroup {
    outline: none;
    overflow: hidden;
    margin-top: 1.5em;
    border: var(--defaultBorder);
    border-radius: var(--smallRadius);
}

@supports(display:revert) {
    .itemDetailsGroup {
        outline: var(--defaultBorder);
        outline-offset: calc(-1*var(--borderWidth));
        border: none;
    }
}

.itemDetailsGroup>div:not(:last-child) {
    border-bottom: var(--defaultBorder);
}

.detailsGroupItem {
    margin: 0 !important;
    justify-content: space-between;
    padding: 0.5em 0.9em;
    align-items: baseline;
}

.detailsGroupItem>.label {
    font-weight: 600;
    flex-basis: 6em;
}

.detailsGroupItem>.content>a {
    font-weight: 400;
    text-align: end;
}

.detailsGroupItem>.content {
    text-align: end;
    color: var(--dimTextColor);
}

.detailsGroupItem>.label {
    color: var(--textColor);
}

.itemExternalLinks {
    color: var(--textColor);
}

.itemExternalLinks.focuscontainer-x {
    color: transparent;
}

.itemExternalLinks.focuscontainer-x>.button-link {
    color: var(--textColor);
    background-color: var(--selectorBackgroundColor);
    padding: .125em .5em;
    border-radius: var(--smallerRadius);
    margin-bottom: .5em;
}

.layout-mobile .itemExternalLinks.focuscontainer-x>.button-link:hover:not(:active) {
    color: var(--textColor) !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a:hover,
.itemExternalLinks.focuscontainer-x>a:active {
    background-color: var(--activeColor) !important;
    color: white !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="themoviedb.org"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="themoviedb.org"]:active {
    background-color: rgb(26, 183, 216) !important;
    color: black !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="imdb.com"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="imdb.com"]:active {
    background-color: rgb(226, 182, 22) !important;
    color: black !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="thetvdb.com"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="thetvdb.com"]:active {
    background-color: rgb(108, 213, 145) !important;
    color: black !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="trakt.tv"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="trakt.tv"]:active {
    background-color: rgb(171, 58, 173) !important;
    color: var(--textColor) !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="theaudiodb.com"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="theaudiodb.com"]:active {
    background-color: rgb(99, 153, 204) !important;
    color: rgb(15, 22, 28) !important;
}

.layout-desktop .itemExternalLinks.focuscontainer-x>a[href*="musicbrainz.org"]:hover,
.itemExternalLinks.focuscontainer-x>a[href*="musicbrainz.org"]:active {
    background-color: rgb(186, 71, 143) !important;
    color: var(--textColor) !important;
}

.itemTags,
.itemTags>a {
    display: none;
    font-size: unset !important;
    font-weight: 200;
}

.detail-clamp-text {
    text-align: start;
    color: var(--dimTextColor);
}

.itemMiscInfo {
    align-items: flex-end !important;
}

.innerCardFooter,
.chapterThumbTextContainer {
    background: linear-gradient(0deg, #000000e8, transparent);
    font-weight: 500;
    text-shadow: .1em .1em 0px black;
    padding: 5em 2em 1.5em 2em;
    width: auto;
    width: -webkit-fill-available;
}

.centerMessage {
    width: unset;
}

.dialog {
    backdrop-filter: var(--blurDefault);
    background-color: var(--drawerColor);
    min-width: 11em;
}

.dialog:not(.dialog-fullscreen) {
    border-radius: var(--largeRadius) !important;
    border: var(--defaultBorder);
}

@media (max-width: 80em),
(max-height: 45em) {

    .dialog.dialog-fixedSize,
    .dialog.dialog-fullscreen-lowres {
        border-radius: unset !important;
        border: unset;
    }

    body:has(.dialog.dialog-fixedSize.opened,
        .dialog.dialog-fullscreen-lowres.opened) {
        overflow: hidden;
    }
}


.dialogBackdropOpened {
    opacity: .66;
}

.dialogContainer:has([data-id="editlyrics"]) {
    top: -1.75em;
}

.subtitleEditor-dropZone,
.imageEditor-dropZone {
    border-radius: var(--largeRadius);
}

.formDialogHeaderTitle {
    margin-inline: 0 !important;
    text-align: center;
    padding: 0 0.5em !important;
}

.formDialogFooter:not(.formDialogFooter-clear.formDialogFooter-flex)>.formDialogFooterItem {
    -webkit-flex-basis: 6em;
    flex-basis: 6em;
}

.collapseContent {
    background-color: unset !important;
    backdrop-filter: unset !important;
}

.selectionCommandsPanel {
    background: var(--lighterGradientPoint);
    border-bottom: var(--defaultBorder);
    backdrop-filter: var(--blurLarge);
}

.selectionCommandsPanel>h1 {
    font-size: large;
}

.itemSelectionPanel {
    border: unset;
    background-color: transparent;
}

.emby-checkbox:checked+span+.checkboxOutline {
    border-radius: var(--smallerRadius) !important;
    box-shadow: inset 0em 7em 10em 20px rgba(0, 0, 0, 0.8);
    background: transparent;
    border-color: white;
    border-style: solid;
    border-width: calc(2 * var(--borderWidth));
    outline: none;
}

@supports(display:revert) {
    .emby-checkbox:checked+span+.checkboxOutline {
        outline: solid var(--borderWidth) white;
    }
}

.checkboxOutline {
    top: unset;
    height: 1.3em;
    width: 1.3em;
    border-radius: var(--smallerRadius);
}


.itemSelectionPanel .material-icons.check:before {
    font-size: 4em;
    color: #ffffff;
    padding: .25em;
}

.cardText-first+.itemSelectionPanel>.checkboxContainer {
    height: calc(100% - 1.75em);
}

div[data-isfolder="true"] .cardText-first+.itemSelectionPanel>.checkboxContainer {
    height: calc(100% - 0em);
}

.checkboxContainer .emby-checkbox:checked+span+.checkboxOutline.multiSelectCheckboxOutline {
    border-radius: var(--largeRadius) !important;
}

.cardText-secondary+.itemSelectionPanel>.checkboxContainer,
.cardText.cardTextCentered:not(.cardText-secondary, .cardText-first)+.itemSelectionPanel>.checkboxContainer {
    height: calc(100% - 3em);
}

.cardFooter+.itemSelectionPanel>.checkboxContainer {
    height: calc(100% - 3.75em);
}

.cardScalable+.itemSelectionPanel>.checkboxContainer {
    height: calc(100% - 0em);
}

.checkboxOutline.multiSelectCheckboxOutline {
    border-radius: var(--largeRadius);
    border-width: 0;
    width: 100%;
    height: 100%;
}

.checkboxOutline:not(.multiSelectCheckboxOutline) .checkboxIcon {
    font-size: .9em;
    font-weight: 900;
}

.checkboxOutline:not(.multiSelectCheckboxOutline) {
    border: solid gray var(--borderWidth);
    background-color: white;
}

.emby-checkbox:checked+span+.checkboxOutline:not(.multiSelectCheckboxOutline) {
    box-shadow: none;
    background: var(--checkboxCheckedBgColor);
    border: var(--defaultLighterBorder);
}

.emby-checkbox:focus:not(:checked)+span+.checkboxOutline {
    border-color: var(--highlightOutlineColor) !important;
    outline: none;
}

.emby-checkbox:focus+span+.checkboxOutline {
    border-color: var(--highlightOutlineColor) !important;
    outline: none;
}

@supports(display:revert) {
    .emby-checkbox:focus:not(:checked)+span+.checkboxOutline {
        outline: var(--borderWidth) solid gray;
        outline-offset: calc(-2.5*var(--borderWidth));
    }

    .emby-checkbox:focus+span+.checkboxOutline {
        border-color: white !important;
        outline: var(--borderWidth) solid var(--highlightOutlineColor);
    }
}

.layout-tv .emby-checkbox:focus:not(:checked)+span+.checkboxOutline {
    outline: none;
}

.layout-tv .emby-checkbox:focus+span+.checkboxOutline {
    outline: none;
}

.cardIndicators {
    -webkit-align-items: center;
    align-items: center;
    top: .5em;
}

[dir=ltr] .cardIndicators {
    right: .5em;
}

.layout-mobile .cardIndicators {
    top: .2em;
    right: .2em;
}

.indicator {
    border: solid rgb(124 124 124 / 50%) var(--borderWidth);
    border-radius: 20%;
}

.videoIndicator {
    background: rgb(41 41 41);
    padding: .5em;
    transform: scale(.85);
    border: var(--defaultLighterBorder);
    font-size: .75em;
}

.videoIndicator:has(.photo_album),
.videoIndicator:has(.folder) {
    background: peru;
}

.videoIndicator:has(.photo) {
    background: steelblue;
}

.videoIndicator:has(.videocam) {
    background: indianred;
}

.defaultCardBackground,
.cardScalable {
    background: var(--cardBackgroundGradient);
}

div[data-type="Book"] .play_arrow:before {
    content: "\f53b";
    font-size: 85%;
}

div[data-type="Photo"] .play_arrow:before {
    content: "\e5d0";
}

div[data-type="PhotoAlbum"] .play_arrow:before {
    content: "\e8eb";
}

.card-withuserdata[data-isfolder="true"] .cardImageContainer.defaultCardBackground {
    filter: contrast(0.85);
    background-size: cover !important;
    background-position: 50% !important;
    background-blend-mode: multiply;
}

.emby-button.block,
.button-alt,
.raised,
#btnDeleteImage,
.dashboardActionsContainer>.emby-button {
    color: #fff;
    border-radius: var(--smallRadius);
    background: var(--lighterGradientPoint);
    border: var(--defaultBorder);
}

.editItemMetadataForm>.metadataFormFields div:has(.formDialogFooterItem) {
    display: flex;
    justify-content: center;
}

.btnBrowse>.folder {
    margin-inline-end: .5em;
}

.fab {
    color: #fff;
    background: var(--lighterGradientPoint);
    border: var(--defaultBorder);
}

.fab:focus {
    background: var(--lighterGradientPoint) !important;
    filter: brightness(1.35);
}

.raised:focus {
    background: inherit;
    filter: brightness(1.35);
}

.raised:active,
.fab:active,
.emby-button:active {
    filter: brightness(1.2) !important;
}

.localnav>.emby-button {
    background: var(--lighterGradientPoint) !important;
    color: #fff;
    padding: .8em .8em;
}

div[data-role=controlgroup] a.ui-btn-active {
    background: var(--selectorBackgroundColor) !important;
    color: #fff !important;
}

.guide-date-tab-button.emby-tab-button-active,
.guide-date-tab-button:focus {
    color: white;
}

#btnDeleteImage,
.button-delete,
.btnRevoke,
#btnShutdown {
    background: var(--btnDeleteColor);
    border: solid var(--btnDeleteBorderColor) var(--borderWidth);
}

.button-submit {
    background: var(--btnSubmitColor) !important;
    border: solid var(--btnSubmitBorderColor) var(--borderWidth) !important;
}

.collapseContent,
.formDialogFooter:not(.formDialogFooter-clear),
.formDialogHeader:not(.formDialogHeader-clear) {
    background-color: var(--headerColor);
    backdrop-filter: var(--blurDefault);
}

.visualCardBox,
.paperList {
    background-color: var(--headerColor) !important;
    border-radius: var(--largeRadius) !important;
    border: var(--defaultBorder) !important;
    box-shadow: unset !important;
}

.paperList {
    padding: .4em;
}

.serverInfo {
    padding: 1em;
}

.serverInfo>:nth-child(1n) {
    -webkit-flex: 1 0 30%;
    flex: 1 0 30%;
}

.serverInfo>:nth-child(2n) {
    -webkit-flex: 1 0 50%;
    flex: 1 0 50%;
    text-align: end;
}

.listItemIcon:not(.listItemIcon-transparent) {
    background-color: var(--lighterGradientPoint) !important;
}

.listItemIcon.notification_important {
    background-color: var(--btnDeleteColor) !important;
    border: solid var(--btnDeleteBorderColor) var(--borderWidth);
}

.listItemIcon.notifications:not(.listItemIcon-transparent),
.listItemIcon.schedule:not(.listItemIcon-transparent),
.listItemIcon.person:not(.listItemIcon-transparent),
.listItemIcon.live_tv:not(.listItemIcon-transparent) {
    background-color: rgb(41, 49, 83) !important;
    border: var(--defaultBorder);
}

.readOnlyContent {
    flex-direction: column !important;
}

.MuiAppBar-root {
    background: var(--headerColor);
    backdrop-filter: var(--blurDefault);
    border-bottom: var(--defaultBorder);
}

.MuiDrawer-paper {
    background: var(--drawerColor);
    backdrop-filter: var(--blurLarge);
    border-right: var(--defaultBorder);
}

.MuiDrawer-paper:first-child {
    margin-block-start: .25em;
}

.listItemImage {
    border-radius: var(--smallRadius);
    margin-right: .75em !important;
    border: var(--defaultBorder);
}

[dir=ltr] .listItem:not(.actionSheetMenuItem, .childrenItemsContainer .listItem, .activityLogListWidget .listItem) {
    padding: 0.375em !important;
}

[dir=ltr] .listItem:not(.actionSheetMenuItem, .childrenItemsContainer .listItem, .activityLogListWidget .listItem):not(:last-child) {
    margin-bottom: .5em;
}

[dir="ltr"] .listItem:not(.actionSheetMenuItem)[data-type="Episode"] {
    padding: .375em;
    margin-bottom: .5em;
}

.listItem[data-type="Audio"] {
    margin-inline: 1em;
}

.listItem[data-type="Audio"]:has(.playlistIndexIndicatorImage) .listItemBodyText {
    color: white;
    font-weight: 600;
}

[dir="ltr"] .listItem:not(.actionSheetMenuItem)[data-type="Episode"] .listItemBodyText:not(.secondary) {
    font-size: 1.17em;
    font-weight: 600;
}

.listItemBody>.listItemBodyText:not(.secondary) {
    display: -webkit-box;
    line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    color: var(--textColor);
}

.listItem-overview {
    display: -webkit-box;
    line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.listItem-bottomoverview,
[dir="ltr"] .listItem:not(.actionSheetMenuItem)[data-type="Episode"] .listItem-overview p {
    margin-top: .75em;
    margin-bottom: 0em;
}

.listItem,
.navMenuOption {
    border-radius: .7em;
}

.listItem:hover,
.navMenuOption:hover {
    background: unset;
    border-radius: .7em;
}

.listItem:focus {
    background: var(--highlightOutlineColor);
}

.listItem:active,
.navMenuOption:active {
    background: rgba(255, 255, 255, 0.125);
}

.listItem-border {
    border-color: transparent !important;
}

.listItem-border.emby-button.show-focus:focus {
    border-radius: var(--smallRadius);
}

.MuiListItem-root>a,
.MuiList-root>a,
.MuiListItem-root>div {
    border: solid transparent var(--borderWidth);
    border-radius: .7em;
    margin-inline: .5em !important;
    margin-block: .25em !important;
}

.Mui-selected {
    background-color: var(--activeColor) !important;
}

.actionSheetContent {
    padding: .4em !important;
}

.actionSheetContent>h1 {
    font-size: unset;
}

[dir=ltr] .actionsheetMenuItemIcon.check {
    margin: 0 .45em 0 .45em !important;
}

.actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check) {
    background-color: var(--activeColor);
}

.actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check) .listItemBodyText {
    color: white;
}

.actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check) .listItemIcon.material-icons.check {
    display: none;
}

.actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check[style*="hidden"]) {
    background-color: transparent;
}

.actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check[style*="hidden"]):active {
    background-color: rgba(255, 255, 255, 0.125);
}

.navMenuOption {
    border-radius: var(--smallRadius) !important;
    margin: 0em 1em !important;
}

[dir=ltr] .navMenuOption {
    padding: 0.75em 1em !important;
    margin-bottom: unset;
}

#myPreferencesMenuPage .listItemIcon {
    margin-inline: .5em .25em;
}

.navMenuOption-selected {
    background-color: var(--activeColor) !important;
}

.detailSection {
    display: flex;
    flex-direction: column;
    gap: 1em;
    max-width: unset !important;
}

.detailPageContent {
    gap: 1em;
}

.trackSelections {
    order: 2;
    max-width: unset !important;
}

.detailsGroupItem,
.trackSelections .selectContainer {
    max-width: unset !important;
    align-items: center;
}

.selectArrowContainer {
    top: 0em;
    opacity: .5;
}

.trackSelectionFieldContainer>.selectArrowContainer {
    top: .5em;
}

.trackSelectionFieldContainer>label {
    max-width: 2.75em;
    background-repeat: no-repeat;
    color: transparent;
    transform: scale(.9);
}

.selectVideoContainer.trackSelectionFieldContainer>label {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="%23d1d5db" viewBox="0 0 24 24"><g stroke-width="1.5"><path d="M2 12c0-4.7 0-7 1.5-8.5C4.9 2 7.3 2 12 2s7 0 8.5 1.5C22 4.9 22 7.3 22 12s0 7-1.5 8.5C19.1 22 16.7 22 12 22s-7 0-8.5-1.5C2 19.1 2 16.7 2 12Z"/><path stroke-linecap="round" d="M17 2.5v19M7 2.5v19M2.5 7H7m14.5 0H17M2.5 17H7m14.5 0H17M2 12h20"/></g></svg>');
}

.selectAudioContainer.trackSelectionFieldContainer>label {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="%23d1d5db" viewBox="0 0 24 24"><g stroke-width="1.5"><path d="M9 19a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM21 17a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM9 19V8M21 17V6"/><path stroke-linecap="round" d="m15.7 3.8-4 1.3c-1.3.4-2 .6-2.3 1.2C9 6.8 9 7.5 9 8.9V12l12-4v-.5c0-2.5 0-3.7-.8-4.3-.9-.6-2-.2-4.5.6Z"/></g></svg>');
}

.selectSubtitlesContainer.trackSelectionFieldContainer>label {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="%23d1d5db" viewBox="0 0 24 24"><g stroke-width="1.5"><path d="M2 12c0-3.8 0-5.7 1.2-6.8C4.3 4 6.2 4 10 4h4c3.8 0 5.7 0 6.8 1.2C22 6.3 22 8.2 22 12s0 5.7-1.2 6.8C19.7 20 17.8 20 14 20h-4c-3.8 0-5.7 0-6.8-1.2C2 17.7 2 15.8 2 12Z"/><path stroke-linecap="round" d="M10 16H6M14 13h4M14 16h-1.5M9.5 13h2M18 16h-1.5M6 13h1"/></g></svg>')
}

.selectSourceContainer.trackSelectionFieldContainer>label {
    background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="%23d1d5db" d="m15.4 4.05-.5.56.5-.56Zm3.95 3.57-.5.55.5-.55Zm2.3 2.53-.68.3.68-.3ZM3.17 20.83l.53-.53-.53.53Zm17.66 0-.53-.53.53.53Zm-6.83.42h-4v1.5h4v-1.5ZM2.75 14v-4h-1.5v4h1.5Zm18.5-.44V14h1.5v-.44h-1.5Zm-6.36-8.95 3.96 3.56 1-1.11L15.9 3.5l-1 1.11Zm7.86 8.95c0-1.69.02-2.75-.41-3.71l-1.37.6c.26.6.28 1.3.28 3.11h1.5Zm-3.9-5.39c1.35 1.22 1.85 1.7 2.12 2.29l1.37-.61c-.43-.96-1.23-1.66-2.49-2.8l-1 1.12Zm-8.82-5.42c1.58 0 2.18.01 2.71.22l.54-1.4c-.85-.33-1.78-.32-3.25-.32v1.5Zm5.86.75c-1.08-.98-1.76-1.6-2.61-1.93l-.54 1.4c.53.2.98.59 2.15 1.64l1-1.11ZM10 21.25c-1.9 0-3.26 0-4.29-.14-1-.13-1.58-.39-2-.81l-1.07 1.06c.75.75 1.7 1.08 2.87 1.24 1.15.15 2.63.15 4.49.15v-1.5ZM1.25 14c0 1.86 0 3.34.15 4.49a4.71 4.71 0 0 0 1.24 2.87L3.7 20.3c-.42-.43-.67-1-.81-2.01A36 36 0 0 1 2.75 14h-1.5ZM14 22.75c1.86 0 3.34 0 4.49-.15a4.71 4.71 0 0 0 2.87-1.24L20.3 20.3c-.43.42-1 .68-2.01.81-1.03.14-2.38.14-4.29.14v1.5ZM21.25 14c0 1.9 0 3.26-.14 4.29-.13 1-.39 1.58-.81 2l1.06 1.07a4.71 4.71 0 0 0 1.24-2.87c.15-1.15.15-2.63.15-4.49h-1.5Zm-18.5-4c0-1.9 0-3.26.14-4.29.14-1 .39-1.58.81-2L2.64 2.63A4.71 4.71 0 0 0 1.4 5.51c-.15 1.15-.15 2.63-.15 4.49h1.5Zm7.28-8.75c-1.87 0-3.36 0-4.51.15a4.72 4.72 0 0 0-2.88 1.24L3.7 3.7c.42-.42 1-.67 2.02-.81 1.03-.14 2.4-.14 4.31-.14v-1.5Z"/><path stroke="%23d1d5db" stroke-width="1.5" d="M13 2.5V5c0 2.36 0 3.54.73 4.27.73.73 1.91.73 4.27.73h4"/></svg>');
}

.detailSectionContent {
    order: 1;
}

.itemDetailsGroup {
    order: 3;
}

.sliderBubble {
    border-radius: var(--largeRadius);
    border: var(--defaultBorder);
    overflow: hidden;
}

.alphaPickerButton {
    font-family: monospace;
    margin: .15em;
    color: rgba(255, 255, 255, 0.25);
}

.alphaPickerButton-selected {
    color: rgba(255, 255, 255, 1);
}

.alphaPicker-vertical {
    height: 70%;
}

.alphaPicker {
    justify-content: center;
}

.alphaPickerButton-tv:focus {
    background-color: var(--highlightOutlineColor);
}

[dir=ltr] .padded-left.vertical-wrap:not(div:has(.homeLibraryButton)) {
    padding-left: 5% !important;
}

[dir=ltr] .padded-right.vertical-wrap:not(div:has(.homeLibraryButton)) {
    padding-right: 5% !important;
}

.paging {
    padding-inline: 1em;
}

.layout-mobile #myPreferencesMenuPage {
    padding-top: 3.75em !important;
}

.headerUserButton {
    width: 2em;
    height: 2em;
    margin-inline-end: 1em;
    border: var(--defaultBorder);
}

.MuiAvatar-circular {
    width: 1.5em;
    height: 1.5em;
    border: var(--defaultBorder);
}

.dashboardDocument .content-primary {
    padding-top: 4.25rem;
}

.editorNode {
    display: flex;
    align-items: center;
}

.metadataSidebarIcon {
    color: #6c7bab;
}

.jstree-default .jstree-wholerow-clicked {
    background: var(--selectorBackgroundColor) !important;
}

.sectionTitleTextButton {
    padding-inline: .5em;
}

.sectionTitleTextButton:hover {
    background: transparent !important;
}

.sectionTitleTextButton:active {
    color: white !important;
}

.sectionTitleTextButton>* {
    padding: .3em 0 !important;
    margin: 0 0 !important;
}

.dashboardSection .sectionTitleTextButton>.material-icons,
.sectionTitleTextButton>.material-icons,
.dashboardSection .sectionTitleTextButton>.material-icons.material-icons {
    font-size: unset;
}

.sectionTitleTextButton>.material-icons::before {
    display: none;
}

.sectionTitleTextButton>.material-icons.chevron_right {
    margin-left: .5rem !important;
    height: 1.5rem;
    width: 1.5rem;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke-width='1.5' stroke='%23D1D5DB' aria-hidden='true'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M12.75 15l3-3m0 0l-3-3m3 3h-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z'%3E%3C/path%3E%3C/svg%3E") no-repeat center center;
    background-size: contain;
    /* Stops miscalculating the size on hover effect */
}

.toast {
    border-radius: var(--smallRadius);
}

.upNextContainer {
    border-radius: var(--largeRadius);
    color: var(--textColor);
}

[dir=ltr] .upNextContainer {
    margin: 2em;
    box-sizing: border-box;
    max-width: 80vw;
}

.upNextContainer .btnStartNow {
    background-color: var(--btnSubmitColor);
    border-color: var(--btnSubmitBorderColor);
}

.upNextDialog-title {
    white-space: wrap;
    width: unset;
}

.upNextDialog-buttons {
    width: unset;
    flex-wrap: wrap;
}

.upNextContainer .upNextDialog-countdownText {
    color: white;
}

.skip-button {
    background-color: whitesmoke;
    box-shadow: var(--shadow);
}

.skip-button:hover {
    background-color: white;
}

.skip-button:active {
    background-color: rgba(245, 245, 245, 0.7);
    box-shadow: none;
}

.toast,
.upNextContainer {
    background: var(--headerColor) !important;
    border: var(--defaultBorder) !important;
    backdrop-filter: var(--blurDefault);
}

.activeSession {
    width: 98% !important;
}

.emby-tab-button:hover {
    color: whitesmoke;

}

@media (hover: hover) and (pointer: fine) {
    .paper-icon-button-light:hover:not(:disabled, .cardOverlayButton) {
        color: #fff;
        background-color: rgb(255 255 255 / 5%);
    }

    .actionSheetMenuItem.emby-button:has(.listItemIcon.material-icons.check[style*="hidden"]):hover {
        background-color: rgba(255, 255, 255, 0.125);
    }

    .emby-select-withcolor:hover:not(.emby-select[disabled], :focus),
    .emby-input:hover:not(:focus),
    .emby-textarea:hover:not(:focus) {
        border-color: var(--dimTextColor) !important;
    }

    .checkboxContainer:hover .checkboxOutline:not(.multiSelectCheckboxOutline) {
        border-color: var(--checkboxCheckedBgColor);
        border-width: calc(2 * var(--borderWidth));
    }

    .raised:hover,
    .fab:hover,
    .emby-button:hover {
        filter: brightness(1.2) !important;
    }

    .button-flat:hover {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
    }

    .alphaPickerButton:hover {
        color: rgba(255, 255, 255, 1);
    }

    .listItem:hover,
    .navMenuOption:hover {
        background: rgba(255, 255, 255, 0.125);
    }

    .searchfields-icon:hover,
    .inputContainer .emby-input-iconbutton:hover {
        color: rgba(255, 255, 255, 0.8);
    }

    #scenesContent .cardScalable:hover {
        border-color: var(--dimTextColor) !important;
    }

    .sectionTitleTextButton:hover {
        background: transparent !important;
        color: white !important;
    }

    .button-link:hover {
        color: rgb(243, 243, 243) !important;
        text-decoration: none;
    }
}

.paper-icon-button-light:active:not(:disabled) {
    color: #fff;
    background-color: rgb(255 255 255 / 5%);
}

.emby-textarea {
    font-family: consolas;
}

.emby-select-withcolor,
.emby-select,
.emby-input,
.emby-textarea {
    background-color: var(--selectorBackgroundColor);
    border: var(--defaultLighterBorder);
    border-radius: var(--smallRadius);
    padding: .5em !important;
}

.inputLabelFocused,
.selectLabelFocused,
.textareaLabelFocused {
    color: #fff;
}

.emby-select-withcolor:focus,
.emby-input:focus,
.emby-textarea:focus {
    border-color: var(--highlightOutlineColor) !important;
    outline: none !important;
}

@supports (display:revert) {

    .emby-select-withcolor:focus,
    .emby-input:focus,
    .emby-textarea:focus {
        border-color: var(--highlightOutlineColor) !important;
        outline: thin solid var(--highlightOutlineColor) !important;
    }
}

.emby-select-withcolor>option {
    color: inherit;
    background-color: var(--selectorBackgroundColor);
}

.inputContainer .emby-input-iconbutton {
    color: rgba(255, 255, 255, 0.5);
    margin-left: -2.5em;
    background-color: transparent !important;
}

.searchfields-txtSearch {
    padding: .75em 1.5em !important;
    border-radius: 4em;
}

.searchfields-icon {
    padding: .25em;
    margin-left: -1.75em;
    margin-bottom: 0;
    border-radius: var(--largeRadius);
    color: rgba(255, 255, 255, 0.5);
}

.searchfields-icon:active,
.inputContainer .emby-input-iconbutton:active {
    color: rgba(255, 255, 255, 0.8);
}

.searchFields>.searchFieldsInner {
    flex-direction: row-reverse;
}

.layout-mobile [dir=ltr] .infoWrapper {
    padding-left: 34%;
    padding-bottom: 2%;
}

.infoWrapper h1.itemName {
    font-size: xxx-large;
}

.layout-mobile .infoWrapper h1.itemName {
    font-size: 1.6em;
}

#liveTvSuggestedPage,
.liveTvContainer {
    background-color: var(--tableBodyColor);
}

.programCell-active {
    background-color: var(--activeColor) !important;
    border-radius: .5em;
    margin-block: .5em !important;
}

.guideVerticalScroller {
    padding: 0;
}

.programGrid {
    background-color: var(--lighterGradientPointAlpha);
}

.channelPrograms>.programCell:nth-child(odd) {
    background-color: var(--darkerGradientPoint);
}

.guide-channelHeaderCell:focus,
.programCell:focus {
    background-color: var(--highlightOutlineColor) !important;
}

.emby-select-iconbutton {
    background-color: var(--selectorBackgroundColor);
    border: var(--defaultLighterBorder);
    border-radius: var(--smallRadius);
    margin-inline-start: 1em;
}

@media (min-width: 62em) {
    .sectionTabs:not(.layout-tv .sectionTabs) {
        -webkit-align-items: center;
        align-items: center;
        -webkit-align-self: center;
        align-self: center;
        -webkit-justify-content: center;
        justify-content: center;
        margin-top: -4.3em;
        position: relative;
        width: auto;
    }

    .libraryPage:not(.noSecondaryNavPage):not(.layout-tv .libraryPage) {
        padding-top: 4.8em !important;
    }
}

.layout-tv .headerLeft {
    overflow: unset;
    margin: .25em .5em;
}

.subtitleappearance-preview {
    border-radius: var(--smallRadius);
}

.infoBanner {
    display: flex;
    place-content: center;
    background-color: var(--headerColor) !important;
    border-radius: var(--largeRadius) !important;
    border: var(--defaultBorder) !important;
}

.sliderBubbleText {
    font-size: 1.5em;
}

fieldset {
    border-radius: var(--smallRadius);
    border: var(--defaultBorder);
}

table:not(.MuiTable-root.MuiTable-stickyHeader) {
    border-color: var(--borderColor) !important;
    border-radius: var(--smallRadius);
    border-spacing: 1px;
    border: var(--defaultBorder);
    background: var(--tableBodyColor);
    border-collapse: separate;
    overflow: hidden;
}

.detailTableHeaderCell {
    vertical-align: middle;
}

#serverActivityPage .MuiPaper-elevation2 {
    border: var(--defaultBorder) !important;
    box-shadow: unset !important;
}

#serverActivityPage .MuiPaper-elevation2,
#serverActivityPage .MuiPaper-elevation2>.MuiBox-root,
#serverActivityPage .MuiTableRow-root.MuiTableRow-head {
    background-color: var(--tableBodyColor);
}

.detailTableBodyRow-shaded:nth-child(odd),
#serverActivityPage .MuiTableBody-root .MuiTableRow-root:nth-child(odd) {
    background: var(--darkerGradientPointAlpha) !important;
}

.detailTableBodyRow-shaded:nth-child(even),
#serverActivityPage .MuiTableBody-root .MuiTableRow-root:nth-child(even) {
    background: var(--lighterGradientPointAlpha) !important;
}


.MuiList-root.MuiMenu-list {
    background-color: var(--drawerColor);
}

ul.MuiList-root.MuiMenu-list.MuiList-dense>div:first-child {
    /* ! Don't change these units. They are rem because that is standard for MUI */
    gap: 0.5rem;
}

.playerStats,
.iconOsd {
    border-radius: var(--largeRadius);
    background-color: rgba(69, 69, 69, 0.69);
    backdrop-filter: var(--blurDefault);
}

.playerStats-stats {
    max-height: 50vh;
    flex-wrap: wrap;
    overflow-x: auto;
    padding: 1em !important;
}

#scenesContent .cardScalable:active {
    border-color: var(--dimTextColor) !important;
}

.progressring-spiner {
    border-color: var(--uiAccentColor);
}

.skinHeader.focuscontainer-x.skinHeader-withBackground.skinHeader-blurred.semiTransparent.noHeaderRight {
    display: none;
}

@media (max-height: 890px) {
    #loginPage {
        padding-top: 6.5em !important;
    }
}

@media (max-height: 1300px) {
    #loginPage:has(.padded-left.padded-right.padded-bottom-page .visualLoginForm:not(.hide)) {
        padding-top: 6.5em !important;
    }
}

#loginPage .readOnlyContent {
    margin: .5em auto 0em !important;
}

#loginPage .padded-left.padded-right.padded-bottom-page {
    margin: 2em auto 0;
    width: 28em;
    background: rgba(30, 40, 54, 0.7);
    padding: 2em 2em 1em 2em !important;
    border-radius: var(--largerRadius);
    backdrop-filter: var(--blurDefault);
    box-sizing: border-box;
}

#loginPage .padded-left.padded-right.padded-bottom-page:has(.visualLoginForm:not(.hide)) {
    width: 80em;
}

#divUsers .squareCard {
    width: 30% !important;
}

@media (max-width: 640px) {
    #loginPage .padded-left.padded-right.padded-bottom-page {
        width: 87%;
        margin: 2em;
    }
}

@media (max-width: 1300px) {
    #loginPage .padded-left.padded-right.padded-bottom-page:has(.visualLoginForm:not(.hide)) {
        width: 100%;
        margin: 2em;
    }
}

#loginPage {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    min-height: 100vh;
    padding: 0;
    background:
        var(--loginPageBgUrl, linear-gradient(to bottom, var(--darkerGradientPointAlpha), var(--lighterGradientPoint)));
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.manualLoginForm .sectionTitle,
.visualLoginForm>h1 {
    display: none;
}

.manualLoginForm::before,
.visualLoginForm::before {
    position: relative;
    display: block;
    top: -3.5em;
    margin-bottom: -1em;
    font-size: 1.875em;
    font-weight: 800;
    color: white;
    text-align: center;
    background-image: url('../assets/img/banner.png');
}

.manualLoginForm,
.visualLoginForm {
    position: relative;
}

#quickConnectPreferencesPage .padded-left.padded-right.padded-bottom-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#txtLoginDisclaimer {
    resize: none;
}

.startTimeText,
.endTimeText,
.positionTime,
.runtime {
    width: 4.5em;
    box-sizing: border-box;
}

.startTimeText {
    margin: 0 !important;
}

.endTimeText {
    justify-content: right;
    padding-inline-end: .8em;
}

.startTimeText,
.endTimeText {
    padding-top: .25em;
}

.startTimeText,
.positionTime {
    text-align: start;
    justify-content: left;
}

.endTimeText,
.runtime {
    text-align: end;
    justify-content: right;
}

.filterIndicator {
    background: var(--activeColor);
}

#indexPage:not(.hide) .card-withuserdata[data-isfolder="true"]:not([data-type="PhotoAlbum"], [data-type="Series"], [data-type="Folder"], [data-type="Season"], [data-type="Playlist"]) .cardPadder-overflowBackdrop {
    padding-bottom: 50%;
}

.card-withuserdata[data-isfolder="true"]:not([data-type="PhotoAlbum"], [data-type="Series"], [data-type="Folder"], [data-type="Season"], [data-type="Playlist"]) .cardImageContainer.cardContent::before {
    position: absolute;
    font-size: 3.5vh;
    margin-bottom: .175em;
    font-weight: 800;
    color: white;
    font-family: 'Noto Sans';
    text-align: center;
}

#indexPage:not(.hide) .card-withuserdata[data-isfolder="true"]:not([data-type="PhotoAlbum"], [data-type="Series"], [data-type="Folder"], [data-type="Season"], [data-type="Playlist"]) .cardText-first,
#indexPage:not(.hide) .card-withuserdata[data-isfolder="true"]:not([data-type="PhotoAlbum"], [data-type="Series"], [data-type="Folder"], [data-type="Season"], [data-type="Playlist"]) .cardText.cardTextCentered {
    display: none;
}

.nowPlayingButtonsContainer {
    margin-top: 1em;
}

.nowPlayingPageImageContainerNoAlbum {
    border: var(--defaultBorder);
    border-radius: var(--smallRadius);
    overflow: hidden;
}

.nowPlayingPageImageContainerNoAlbum .defaultCardBackground {
    background: repeating-radial-gradient(black, transparent 10em);
}

.nowPlayingPageImageContainerNoAlbum .cardImageContainer .cardImageIcon {
    color: var(--borderColor);
}

@media (orientation: portrait) and (max-width: 43em) {
    .nowPlayingPageImageContainerNoAlbum .cardImageContainer .cardImageIcon {
        font-size: 8em !important;
    }
}

.layout-mobile .playlistSection .playlist {
    padding: 2em 0;
    top: 3.5em;
    bottom: 4.3em;
    background: color-mix(in srgb, var(--headerColor), var(--darkerGradientPoint) 50%);
    backdrop-filter: var(--blurLargest);
    z-index: 0;
}

.layout-mobile .playlistSectionButton {
    background: var(--drawerColor);
    border-top: var(--defaultBorder);
    backdrop-filter: var(--blurSmallest);
    z-index: 1;
}

.layout-mobile .playlistSectionButton.playlistSectionButtonTransparent {
    background: transparent;
    border-top: var(--defaultBorder);
    border-color: transparent;
}

.layout-desktop .nowPlayingInfoContainer {
    position: -webkit-sticky;
    position: sticky;
    top: 5em;
    padding: 1em;
    margin-bottom: 2em;
    backdrop-filter: var(--blurLargest);
    border: var(--defaultLighterBorder);
    z-index: 2;
    background-color: var(--headerColor);
    box-shadow: var(--shadow);
    border-radius: var(--largerRadius);
    box-sizing: border-box;
}

.layout-desktop .nowPlayingInfoControls {
    margin: 0em 2em;
}

.nowPlayingPageImage {
    box-shadow: var(--shadow);
    border-radius: var(--smallRadius);
}

@media (orientation: portrait) and (max-width: 43em) {
    .nowPlayingInfoContainer {
        height: calc(95% - 4.2em);
    }
}

.nowPlayingSongName.nowPlayingEpisode {
    margin-bottom: 1em;
    font-size: 1.25em;
    color: var(--textColor);
}

.nowPlayingAlbum.nowPlayingSeason {
    color: var(--dimTextColor);
    margin-bottom: .5em;
}

.nowPlayingArtist.nowPlayingSerie {
    margin-bottom: .5em;
}

.playlistIndexIndicatorImage {
    background-blend-mode: difference;
    background-color: var(--textColor);
    background-size: contain !important;
}

.playlistIndexIndicatorImage.defaultCardBackground .audiotrack {
    display: none;
}

#dialogToc {
    background-color: rgba(0, 0, 0, 0.5);
    max-height: unset;
    max-width: unset;
}

#dialogToc .toc li {
    font-size: unset;
    font-weight: 600;
    list-style-type: circle;
    margin-bottom: .5em;
    font-family: "Math", serif;
}

.MuiTabs-indicator {
    display: none;
}

.MuiTabs-root>.MuiTabs-scroller {
    align-content: center;
}

.MuiTabs-flexContainer>.MuiButtonBase-root {
    border-radius: var(--largeRadius);
    min-height: 40px;
    min-width: 72px;
}

.MuiTabs-flexContainer>.MuiButtonBase-root.Mui-selected {
    color: white;
    background-color: transparent !important;
}

.MuiToggleButtonGroup-grouped.Mui-selected {
    color: white;
}

.MuiButtonBase-root.MuiIconButton-root:hover {
    color: white;
    background-color: transparent;
}

#viewPanel .ui-panel-inner {
    margin-top: 4em;
}

/* ------------ ELEGANTFIN CUSTOM MEDIA COVER ------------ */

:root{
    /* my media library default covers customizations */
    --colorOverlayCover: rgba(0, 0, 0, .2);
    --colorOverlayMoviesCover: rgb(193, 103, 104);
    --colorOverlayTvshowsCover: rgb(140, 149, 43);
    --colorOverlayLivetvCover: rgb(17, 98, 159);
    --colorOverlayPlaylistsCover: rgb(118, 61, 216);
    --colorOverlayBoxsetsCover: rgb(219, 180, 53);
    --colorOverlayMusicCover: rgb(11, 93, 72);
    --colorOverlayHomevideosCover: rgb(39, 90, 185);
    --colorOverlayBooksCover: rgb(166, 68, 70);
    --colorOverlayFoldersCover: rgb(173, 60, 113);
    --urlMoviesCover: url(../assets/img/movies.png);
    --urlAnimeCover: url(../assets/img/anime.png);
    --urlTvshowsCover: url(../assets/img/tvshows.png);
    --urlLivetvCover: url(../assets/img/livetv.png);
    --urlPlaylistsCover: url(../assets/img/playlists.png);
    --urlBoxsetsCover: url(../assets/img/boxsets.png);
    --urlMusicCover: url(../assets/img/music.png);
    --urlHomevideosCover: url(../assets/img/homevideos.png);
    --urlBooksCover: url(../assets/img/books.png);
    --urlFoldersCover: url(../assets/img/folders.png);
    --urlRecordingsCover: url(../assets/img/recordings.png);
}

.card-withuserdata[data-isfolder="true"]:not([data-type="PhotoAlbum"],[data-type="Series"],[data-type="Folder"]) .cardImageIcon.material-icons:not(.quiz)::before{
    display: none;
} 


div[data-type="CollectionFolder"][data-path*="Movies"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlMoviesCover) !important;
}

div[data-type="CollectionFolder"][data-path*="Shows"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlTvshowsCover) !important;
}

div[data-type="CollectionFolder"][data-path*="TV Shows"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlTvshowsCover) !important;
}

div[data-type="CollectionFolder"][data-path*="Anime"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlAnimeCover) !important;
}

div[data-type="UserView"][data-path*="livetv"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlLivetvCover) !important;
}

div[data-type="CollectionFolder"][data-path*="Recordings"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlRecordingsCover) !important;
}

div[data-type="CollectionFolder"][data-path*="Music"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlMusicCover) !important;
}

div[data-type="CollectionFolder"][data-path*="homevideos"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlHomevideosCover) !important;
}

div[data-type="CollectionFolder"][data-path*="Books"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlBooksCover) !important;
}

div[data-type="CollectionFolder"][data-collectiontype="boxsets"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlBoxsetsCover) !important;
}

div[data-type="CollectionFolder"][data-collectiontype="folders"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlFoldersCover) !important;
}

div[data-type="CollectionFolder"][data-collectiontype="playlists"] .cardImageContainer.cardContent {
    background-color: var(--colorOverlayCover) !important;
    background-image: var(--urlPlaylistsCover) !important;
}

.card-withuserdata[data-isfolder="true"] .cardImageContainer.cardContent {
    filter: contrast(.85);
    background-size: cover !important;
    background-position: 50% !important;
    background-blend-mode: multiply;
}
